@use "../abstracts" as *;
// .container {
//   padding-left: 12px;
//   padding-right: 12px;
//   margin-left: auto;
//   margin-right: auto;
// @media (min-width: 576px) {
//   max-width: 540px;
// }
// @media (min-width: 768px) {
//   max-width: 720px;
// }
// @media (min-width: 992px) {
//   max-width: 980px;
// }
// @media (min-width: 1200px) {
//   max-width: 1140px;
// }
// @media (min-width: 1400px) {
//   max-width: 1194px;
// }
// }

.container {
  padding-inline: 5rem;
}
.container-10 {
  padding-inline: 0.5rem;
}

/*================
border
=================*/
.border-right-primary {
  border-right: $border-primary;
}

.image-reset {
  border-radius: $border-radius-base;
  overflow: hidden;
  width: 100%;
  height: 100%;
  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}
/*================
position
=================*/
.position-sticky-inherit {
  position: sticky;
  top: 0px;
  background-color: inherit;
  z-index: 2;
}
/*====================
Screen Based Utility Classes for:-
Margin, Paddings, and Section Padding
=====================*/
@for $size from 0rem through 30rem {
  // base class
  //Padding
  .p-#{$size} {
    padding: $size;
  }
  .pt-#{$size} {
    padding-top: $size;
  }
  .pb-#{$size} {
    padding-bottom: $size;
  }
  //Section padding
  .sp-#{$size} {
    padding-top: $size;
    padding-bottom: $size;
  }
  .spt-#{$size} {
    padding-top: $size;
  }
  .spb-#{$size} {
    padding-bottom: $size;
  }
  //Margin
  .m-#{$size} {
    margin: $size;
  }
  .mt-#{$size} {
    margin-top: $size;
  }
  .mb-#{$size} {
    margin-bottom: $size;
  }
  // Width
  .w-full {
    width: 100%;
  }
  .w-#{$size} {
    width: $size;
  }
  .max-w-#{$size} {
    max-width: $size;
  }
  .min-w-#{$size} {
    min-width: $size;
  }
  //height
  .h-full {
    height: 100%;
  }
  .h-#{$size} {
    height: $size;
  }
  .max-h-#{$size} {
    max-height: $size;
  }
  .min-h-#{$size} {
    min-height: $size;
  }

  // screen based classes
  @each $breakpoint-name, $breakpoint-size in $breakpoints {
    @include respond-to($breakpoint-name) {
      //Margin
      .m-#{$size} {
        margin: $size;
      }
      .#{$breakpoint-name}-mt-#{$size} {
        margin-top: $size;
      }
      .#{$breakpoint-name}-mb-#{$size} {
        margin-bottom: $size;
      }
      //Padding
      .p-#{$size} {
        padding: $size;
      }
      .#{$breakpoint-name}-pt-#{$size} {
        padding-top: $size;
      }
      .#{$breakpoint-name}-pb-#{$size} {
        padding-bottom: $size;
      }
      //Section padding
      .sp-#{$size} {
        padding-top: $size;
        padding-bottom: $size;
      }
      .#{$breakpoint-name}-spt-#{$size} {
        padding-top: $size;
      }
      .#{$breakpoint-name}-spb-#{$size} {
        padding-bottom: $size;
      }
      // width
      .w-#{$size} {
        width: $size;
      }
      .#{$breakpoint-name}-max-w-#{$size} {
        max-width: $size;
      }
      .#{$breakpoint-name}-min-w-#{$size} {
        min-width: $size;
      }
      //height
      .h-#{$size} {
        height: $size;
      }
      .#{$breakpoint-name}-max-h-#{$size} {
        max-height: $size;
      }
      .#{$breakpoint-name}-min-h-#{$size} {
        min-height: $size;
      }
    }
  }
}
/* End Screen Based Utility Classes  */
/*=====================================================
align self || justify self || align items || justify content || text align
=======================================================*/
.align-self-start {
  align-self: flex-start;
}
.align-self-center {
  align-self: flex-center;
}
.align-self-end {
  align-self: flex-end;
}
// -------Justify self
.justify-self-start {
  justify-self: flex-start;
}
.justify-self-center {
  justify-self: flex-center;
}
.justify-self-end {
  justify-self: flex-end;
}
// ---------align items

.align-items-start {
  align-items: start;
}
.align-items-center {
  align-items: center;
}
.align-items-end {
  align-items: end;
}
// ----Justify content
.justify-content-start {
  justify-content: start;
}
.justify-content-center {
  justify-content: center;
}
.justify-content-end {
  justify-content: end;
}

///----text align

.text-align-start {
  text-align: start;
}
.text-align-center {
  text-align: center;
}
.text-align-end {
  text-align: end;
}
@each $breakpoint-name, $breakpoint-size in $breakpoints {
  $condition: (
    "start": start,
    "center": center,
    "end": end,
  );
  @each $condition-name, $condition-value in $condition {
    @include respond-to($breakpoint-name) {
      .#{$breakpoint-name}-justify-self-#{ $condition-name} {
        justify-self: flex-#{$condition-name};
      }
      .#{$breakpoint-name}-align-self-#{ $condition-name} {
        align-self: flex-#{$condition-name};
      }
      .#{$breakpoint-name}-align-items-#{ $condition-name} {
        align-items: #{$condition-name};
      }
      .#{$breakpoint-name}-justify-content-#{ $condition-name} {
        justify-content: #{$condition-name};
      }
      .#{$breakpoint-name}-text-align-#{ $condition-name} {
        text-align: #{$condition-name};
      }
    }
  }
}
/* End -> align self || justify self || align items || text align*/
